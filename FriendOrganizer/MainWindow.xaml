<Controls:MetroWindow x:Class="FriendOrganizer.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:local="clr-namespace:FriendOrganizer.UI"
        xmlns:view="clr-namespace:FriendOrganizer.UI.View"
        xmlns:viewModel="clr-namespace:FriendOrganizer.UI.ViewModel"
        mc:Ignorable="d"
        Title="FriendOrganizer" Height="700" Width="1000" FontSize="20"
        WindowStartupLocation="CenterScreen"
        >
    <!--can also defind font size here in title tag-->
    <Window.Resources>
        <!--implicit here means we don't have to specify x:key-->
        <DataTemplate DataType="{x:Type viewModel:FriendDetailViewModel}">
            <view:FriendDetailView/>
        </DataTemplate>
        <!--要擴增時，先在這邊加入implicit view-->
        <DataTemplate DataType="{x:Type viewModel:MeetingDetailViewModel}">
            <view:MeetingDetailView/>
        </DataTemplate>
        <!--擴充programming language detail view-->
        <DataTemplate DataType="{x:Type viewModel:ProgrammingLanguageDetailViewModel}">
            <view:ProgrammingLanguageDetailView/>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="40*"/>
            <!--<ColumnDefinition Width="257*"/>-->
            <!--asteric means the space left over-->
        </Grid.ColumnDefinitions>
        <!--1st row create friend button-->
        <Menu Grid.ColumnSpan="2" FontSize="20" Margin="0,0,-0.4,0.4">
            <MenuItem Header="Create">
                <MenuItem Header="New Friend" 
                          Command="{Binding CreateNewDetailCommand}"
                          CommandParameter="{x:Type viewModel:FriendDetailViewModel}"
                          />
                <MenuItem Header="New Meeting" 
                          Command="{Binding CreateNewDetailCommand}"
                          CommandParameter="{x:Type viewModel:MeetingDetailViewModel}"
                          />
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Programming Languages"
                          Command="{Binding OpenSingleDetailViewCommand}"
                          CommandParameter="{x:Type viewModel:ProgrammingLanguageDetailViewModel}"/>
            </MenuItem>
        </Menu>
        <!--navigation part (left side list)-->
        <view:NavigationView
            Grid.Row="1"
            DataContext="{Binding NavigationViewModel}" 
            Margin="0,0,0,0.4"/>
        <!--friend detail part (right side textbox)-->
        <!--use content control with implicit data template-->
        <!--when we specify content here to be viewModel, it will dynamically look up the
        implicit data template-->
        <TabControl 
            Grid.Row="1"
            Grid.Column="1"
            ItemsSource="{Binding DetailViewModels}"
            SelectedItem="{Binding SelectedDetailViewModel, Mode=TwoWay}"
            Grid.ColumnSpan="2"
            Margin="0,0,-0.4,0.4">
            <!--set tab container style-->
            <TabControl.ItemContainerStyle>
                <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                    <!--other stlye setting-->
                    <Setter Property="Background" Value="DarkBlue"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Style>
            </TabControl.ItemContainerStyle>
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Title}" FontSize="18" VerticalAlignment="Center" FontWeight="Bold"/>
                        <TextBlock Text="*" 
                                   Visibility="{Binding HasChanges, 
                                                Converter={StaticResource BoolToVisibilityConverter}}"/>
                        <!--close button-->
                        <Button Command="{Binding CloseDetailViewCommand}"
                                VerticalAlignment="Center" Margin="4,0" 
                                Foreground="PaleVioletRed" Background="Transparent"
                                BorderBrush="Transparent"
                                Content="x" FontSize="15"/>
                    </StackPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>
        </TabControl>
    </Grid>
</Controls:MetroWindow>
